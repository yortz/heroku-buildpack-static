daemon off;
worker_processes auto;

events {
  use epoll;
  accept_mutex on;
  worker_connections 512;
}

http {
  gzip on;
  gzip_comp_level 6;
  gzip_min_length 512;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_vary on;
  gzip_proxied any;

  server_tokens off;


  access_log logs/access.log;



  error_log stderr info;


  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  #Must read the body in 5 seconds.
  client_body_timeout 5;

  server {
    listen 5000 reuseport;
    charset UTF-8;
    port_in_redirect off;
    keepalive_timeout 5;
    root public_html/;
  
  
    resolver 10.210.97.10 10.86.76.22 10.227.192.22 8.8.8.8;
  
  
    server_name ${HOST};
  

    location / {
      mruby_post_read_handler /app/bin/config/lib/ngx_mruby/headers.rb cache;
      mruby_set $fallback /app/bin/config/lib/ngx_mruby/routes_fallback.rb cache;
    
      try_files $uri $uri/ $fallback;
    
    }

    location ~ ^/users {
      proxy_pass https://hivebench.herokuapp.com;
    }

  

  
    if ($http_x_forwarded_proto != "https") {
      return 301 https://$host$request_uri;
    }
  

  

  # need this b/c setting $fallback to =404 will try #{root}=404 instead of returning a 404
  location @404 {
    return 404;
  }

  # fallback proxy named match
  
    set $upstream_endpoint_0 https://ergregwf.herokuapp.com;
    location @/ {
      rewrite ^//?(.*)$ /$1 break;
      # can reuse variable set above
      proxy_pass $upstream_endpoint_0;
      proxy_ssl_server_name on;
      
      proxy_redirect http://ergregwf.herokuapp.com/ /;
      
      proxy_redirect https://ergregwf.herokuapp.com/ /;
      
    }
  

  # fallback redirects named match
  

  }


  server {
    listen 5000 default_server;
    server_name _;
    
      return 301 https://${HOST}$request_uri;
    
  }

}
